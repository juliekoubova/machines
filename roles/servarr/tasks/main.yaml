- name: servarr dataset
  when: zfs
  community.general.zfs:
    name: "{{ zfs_data_pool }}{{ data_dir }}"
    state: present
    extra_zfs_properties:
      mountpoint: "{{ data_dir }}"

- name: servarr group
  ansible.builtin.group:
    name: servarr
    system: yes
  register: servarr_group

- name: servarr user
  ansible.builtin.user:
    name: servarr
    group: servarr
    system: yes
    home: "{{ data_dir }}"
  register: servarr_user

- name: servarr directories
  ansible.builtin.file:
    state: directory
    owner: servarr
    group: servarr
    dest: "{{ data_dir }}/{{ item }}"
  loop:
    - "{{ filebot_config }}"
    - "{{ jellyfin_config }}"
    - "{{ torrent_config }}"

- name: Jellyfin container
  containers.podman.podman_container:
    name: jellyfin
    image: ghcr.io/hotio/jellyfin
    restart_policy: always
    cmd_args: --no-healthcheck # fuck systemd timers
    env:
      PUID: "{{ servarr_user.uid }}"
      PGID: "{{ servarr_group.gid }}"
      TZ: "{{ timezone }}"
      UMASK: '002'
    volume:
      - "{{ data_dir }}/{{ jellyfin_config }}:/config"
      - "{{ media_dir }}:{{ media_dir }}"
    label:
      traefik.http.routers.jellyfin.rule: Host(`jellyfin.totoro.family`) 
      traefik.http.routers.jellyfin.entrypoints: websecure

- name: qBittorrent container
  containers.podman.podman_container:
    name: qbittorrent
    image: ghcr.io/hotio/qbittorrent
    restart_policy: always
    cmd_args: --no-healthcheck # fuck systemd timers
    env:
      PUID: "{{ servarr_user.uid }}"
      PGID: "{{ servarr_group.gid }}"
      TZ: "{{ timezone }}"
      UMASK: '002'
      WEBUI_PORT: 8080
    volume:
      - "{{ data_dir }}/{{ torrent_config }}:/config"
      - "{{ media_dir }}:/data"
    label:
      traefik.http.routers.qbittorrent.rule: Host(`qbittorrent.totoro.family`) 
      traefik.http.routers.qbittorrent.entrypoints: websecure
      traefik.http.services.qbittorrent.loadbalancer.server.port: 8080
    publish:
      - '51413:51413/tcp'
      - '51413:51413/udp'

- name: FileBot Node container
  containers.podman.podman_container:
    name: filebot-node
    image: rednoah/filebot:node
    restart_policy: always
    cmd_args: --no-healthcheck # fuck systemd timers
    env:
      PUID: "{{ servarr_user.uid }}"
      PGID: "{{ servarr_group.gid }}"
    volume:
      - "{{ data_dir }}/{{ filebot_config }}:/data"
      - "{{ media_dir }}:/volume1"
    label:
      traefik.http.routers.filebot.rule: Host(`filebot.totoro.family`) 
      traefik.http.routers.filebot.entrypoints: websecure
      traefik.http.services.filebot.loadbalancer.server.port: 5452

