- name: Install zfs-autobackup
  tags: [ zfs ]
  community.general.apk:
    name: py3-zfs-autobackup@testing

- name: Ensure {{ backup_user }} user
  ansible.builtin.user:
    name: "{{ backup_user }}"
    home: "{{ backup_home }}"
    system: yes
    password: '*'

- name: Ensure {{ backup_user }} .ssh dir
  ansible.builtin.file:
    owner: "{{ backup_user }}"
    group: nogroup
    dest: "{{ backup_home }}/.ssh"
    state: directory
    mode: "700"

- name: Ensure backup targets public keys are present in known_hosts file
  loop: "{{ backup_targets }}"
  ansible.builtin.known_hosts:
    path: "{{ backup_home }}/.ssh/known_hosts"
    name: "{{ hostvars[item].ansible_host | default(item) }}"
    key: "{{ lookup('pipe', 'ssh-keyscan {{ hostvars[item].ansible_host | default(item) }}') }}"

- name: Configure backup targets SSH connection
  loop: "{{ backup_targets }}"
  ansible.builtin.blockinfile:
    path: "{{ backup_home }}/.ssh/config"
    create: yes
    block: |
      Host {{ item }}
      User {{ inventory_hostname }}
      HostName {{ hostvars[item].ansible_host | default(item) }}

- name: "Configure ZFS permissions for {{ backup_user }} on {{ zfs_root_pool }}"
  community.general.zfs_delegate_admin:
    name: "{{ zfs_root_pool }}"
    permissions: [ mount, send, hold, snapshot, destroy, release ]
    users: "{{ backup_user }}"

- name: Ensure {{ backup_user }} has an SSH key
  community.crypto.openssh_keypair:
    type: ed25519
    path: "{{ backup_home }}/.ssh/id_ed25519"
    owner: "{{ backup_user }}"
    group: nogroup
    mode: "600"
  register: ssh_keypair

- name: Set public key fact
  ansible.builtin.set_fact:
    backup_publickey: "{{ ssh_keypair.public_key }}"

- name: Create scripts
  loop: [ send.sh, snapshot.sh ]
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ backup_home }}/{{ item }}"
    mode: '700'
    group: nogroup
    owner: "{{ backup_user }}"

- name: Setup snapshot job every 15 minutes
  ansible.builtin.cron:
    user: "{{ backup_user }}"
    name: snapshot
    minute: '*/15'
    job: "{{ backup_home }}/snapshot.sh"

- name: Setup send job
  ansible.builtin.cron:
    user: "{{ backup_user }}"
    name: send
    hour: "{{ backup_send_hour }}"
    minute: "{{ backup_send_minute }}"
    job: "{{ backup_home }}/send.sh"

- name: Allow doas send without password
  ansible.builtin.lineinfile:
    dest: /etc/doas.conf
    line: "permit nopass :wheel as {{ backup_user }} cmd {{ backup_home }}/send.sh"

- name: Ensure /etc/zzz.d
  ansible.builtin.file:
    dest: /etc/zzz.d
    state: directory

- name: Send backups before suspend
  ansible.builtin.copy:
    dest: /etc/zzz.d/send-backup
    mode: '755'
    content: |
      #!/bin/sh
      if [ "${1}" == "pre" ]; then
        exec su -s /bin/sh "{{ backup_user }}" "{{ backup_home }}/send.sh"
      fi

- name: Send backups before shutdown
  ansible.builtin.copy:
    dest: /etc/local.d/send-backup.stop
    mode: '755'
    content: |
      #!/bin/sh
      exec su -s /bin/sh "{{ backup_user }}" "{{ backup_home }}/send.sh"

- name: Ensure local service enabled
  ansible.builtin.service:
    name: local
    enabled: yes
    state: started
