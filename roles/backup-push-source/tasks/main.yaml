- name: Install zfs-autobackup
  tags: [ apk ]
  community.general.apk:
    name: py3-zfs-autobackup@testing

- name: Ensure {{ backup_user }} user
  ansible.builtin.user:
    name: "{{ backup_user }}"
    home: "{{ backup_home }}"
    system: yes
    password: '*'

- name: Ensure {{ backup_user }} .ssh dir
  ansible.builtin.file:
    owner: "{{ backup_user }}"
    group: nogroup
    dest: "{{ backup_home }}/.ssh"
    state: directory
    mode: "700"

- name: Configure backup target SSH
  loop: "{{ backup_targets | dict2items }}"
  loop_control:
    loop_var: target
    label: "{{ target.key }}"
  when: target.key != 'local'
  ansible.builtin.include_tasks: target-ssh.yaml

- name: Configure datasets
  loop: "{{ backup_targets | dict2items }}"
  loop_control:
    loop_var: target
    label: "{{ target.key }}"
  ansible.builtin.include_tasks: target-zfs.yaml

- name: Ensure {{ backup_user }} has an SSH key
  community.crypto.openssh_keypair:
    type: ed25519
    path: "{{ backup_home }}/.ssh/id_ed25519"
    owner: "{{ backup_user }}"
    group: nogroup
    mode: "600"
  register: ssh_keypair

- name: Set public key fact
  ansible.builtin.set_fact:
    backup_publickey: "{{ ssh_keypair.public_key }}"

- name: Install flock
  tags: [ apk ]
  community.general.apk:
    name: flock
    state: present

- name: Create scripts
  loop: [ send.sh, snapshot.sh ]
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ backup_home }}/{{ item }}"
    mode: '750'
    group: wheel
    owner: "{{ backup_user }}"

- name: Setup snapshot job every 15 minutes
  ansible.builtin.cron:
    user: "{{ backup_user }}"
    name: snapshot
    minute: '*/15'
    job: "{{ backup_home }}/snapshot.sh"

- name: Setup send job
  ansible.builtin.cron:
    user: "{{ backup_user }}"
    name: send
    hour: "{{ backup_send_hour }}"
    minute: "{{ backup_send_minute }}"
    job: "{{ backup_home }}/send.sh"

- name: Allow doas send without password
  ansible.builtin.lineinfile:
    dest: /etc/doas.d/doas.conf
    line: "permit nopass :wheel as {{ backup_user }} cmd {{ backup_home }}/send.sh"

- name: Ensure /etc/zzz.d
  ansible.builtin.file:
    dest: /etc/zzz.d
    state: directory

- name: Create scripts
  ansible.builtin.template:
    dest: "{{ item.dest }}"
    src: "{{ item.src }}"
    mode: '755'
  loop:
    - { src: poweroff, dest: /usr/local/bin/poweroff }
    - { src: reboot, dest: /usr/local/bin/reboot }
    - { src: zzz-pre, dest: /etc/zzz.d/send-backup }

- name: Ensure crond enabled
  ansible.builtin.service:
    name: crond
    enabled: yes
    state: started
